Lista de Exercícios I



SELECT F.NOME, COUNT(*)
FROM FUNCIONARIO F
JOIN FLUXO FU ON F.ID = FU.RESPONSAVEL
GROUP BY F.NOME, F.ID







Lista de Exercícios II

7)

(
SELECT PR.TITULO, PR.ORCAMENTO
FROM PROJETO PR
ORDER BY PR.ORCAMENTO ASC
LIMIT 10
)
UNION
(
SELECT PR.TITULO, PR.ORCAMENTO
FROM PROJETO PR
ORDER BY PR.ORCAMENTO DESC
LIMIT 10
)


19)
SELECT C.NOME, COUNT(PR.CODIGO) AS QTD_PROJETOS
FROM PROJETO PR
JOIN EQUIPE E ON E.CODPROJETO = PR.CODIGO
JOIN ALUNO A ON A.CODIGO = E.CODALUNO
JOIN CURSO C ON C.CODIGO = A.CURSO
GROUP BY C.NOME



20)
SELECT A.NOME
FROM ALUNO A
JOIN EQUIPE E ON A.CODIGO = E.CODALUNO
WHERE E.DATAFIMPARTICIP IS NULL
GROUP BY A.NOME



21)
SELECT A.NOME
FROM ALUNO A
JOIN EQUIPE E ON A.CODIGO = E.CODALUNO
WHERE E.DATAFIMPARTICIP IS NULL
GROUP BY A.NOME
HAVING COUNT(E.CODPROJETO) = 1


22)

SELECT AVG(PR.ORCAMENTO) AS MEDIA_ORCAMENTO, PF.NOME
FROM PROJETO PR
JOIN PROFESSOR PF ON PF.CODIGO = PR.CODPROFESSOR
GROUP BY PF.NOME


23)

SELECT TMP_PROJETO.SOMA_ORCAMENTO / TMP_ALUNO.QTD_ALUNOS
FROM
(  --QUANTIDADE DE ALUNOS QUE ESTÃO EM ALGUM PROJET
   SELECT COUNT(*) QTD_ALUNOS
   FROM ALUNO A
   JOIN EQUIPE E ON A.CODIGO = E.CODALUNO
) TMP_ALUNO
,
(  --SOMA DO VALOR TOTAL DE TODOS OS PROJETOS
   SELECT SUM(PR.ORCAMENTO) AS SOMA_ORCAMENTO
   FROM PROJETO PR
) TMP_PROJETO


24)
SELECT PF.NOME
FROM PROFESSOR PF
LEFT JOIN PROJETO PR ON PF.CODIGO = PR.CODPROFESSOR
WHERE PR.CODIGO IS NULL


25)
SELECT A.NOME
FROM ALUNO A
LEFT JOIN EQUIPE E ON A.CODIGO = E.CODALUNO
LEFT JOIN PROJETO PR ON E.CODPROJETO = PR.CODIGO
WHERE PR.CODIGO IS NULL

OU

SELECT A.NOME FROM ALUNO A
WHERE A.NOME NOT IN (
    SELECT A.NOME
    FROM ALUNO A
    JOIN EQUIPE E ON A.CODIGO = E.CODALUNO
    JOIN PROJETO PR ON E.CODPROJETO = PR.CODIGO
)

26)
SELECT C.NOME, COUNT(PR.CODIGO) AS QTD_PROJETOS
FROM PROJETO PR
JOIN EQUIPE E ON E.CODPROJETO = PR.CODIGO
JOIN ALUNO A ON A.CODIGO = E.CODALUNO
JOIN CURSO C ON C.CODIGO = A.CURSO
GROUP BY C.NOME
HAVING COUNT(PR.CODIGO) > 5


27)
SELECT C.NOME, COUNT(C.CODPROFESSOR) AS QTD_PROFESSOR
FROM PROJETO PR
JOIN EQUIPE E ON E.CODPROJETO = PR.CODIGO
JOIN ALUNO A ON A.CODIGO = E.CODALUNO
JOIN CURSO C ON C.CODIGO = A.CURSO
GROUP BY C.NOME


28)
SELECT COUNT(*) AS QTD_ALUNOS, C.NOME
FROM PROJETO PR 
JOIN EQUIPE E ON E.CODPROJETO = PR.CODIGO
JOIN ALUNO A ON A.CODIGO = E.CODALUNO
JOIN CURSO C ON C.CODIGO = A.CURSO
GROUP BY C.NOME


29)
SELECT AVG(P.DATAFIM - P.DATAINICIO) AS MEDIA_DE_DURACAO, C.NOME
FROM PROJETO PR 
JOIN EQUIPE E ON E.CODPROJETO = PR.CODIGO
JOIN ALUNO A ON A.CODIGO = E.CODALUNO
JOIN CURSO C ON C.CODIGO = A.CURSO
WHERE P.DATAFIM IS NOT NULL
GROUP BY C.NOME


30)
SELECT PR.NOME, PF.NOME, C.NOME, COUNT(*) AS QTD_ALUNOS, 
       EXTRACT (MONTH FROM DATAINICIOPARTICIP) 
FROM PROFESSOR PF
JOIN PROJETO PR ON PF.CODIGO = PR.CODPROFESSOR
JOIN EQUIPE E ON E.CODPROJETO = PR.CODIGO
JOIN ALUNO A ON A.CODIGO = E.CODALUNO
JOIN CURSO C ON C.CODIGO = A.CURSO
WHERE EXTRACT (YEAR FROM DATAINICIOPARTICIP) = 2013
GROUP BY PR.NOME, PF.NOME, C.NOME, EXTRACT (MONTH FROM DATAINICIOPARTICIP) 
